<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FaceONNX.Gpu</name>
    </assembly>
    <members>
        <member name="T:FaceONNX.EyeBlinkClassifier">
            <summary>
            Defines eye blink classifier.
            </summary>
        </member>
        <member name="F:FaceONNX.EyeBlinkClassifier._session">
            <summary>
            Inference session.
            </summary>
        </member>
        <member name="M:FaceONNX.EyeBlinkClassifier.#ctor">
            <summary>
            Initializes eye blink classifier.
            </summary>
        </member>
        <member name="M:FaceONNX.EyeBlinkClassifier.#ctor(Microsoft.ML.OnnxRuntime.SessionOptions)">
            <summary>
            Initializes eye blink classifier.
            </summary>
            <param name="options">Session options</param>
        </member>
        <member name="M:FaceONNX.EyeBlinkClassifier.Forward(System.Drawing.Bitmap)">
            <inheritdoc/>
        </member>
        <member name="M:FaceONNX.EyeBlinkClassifier.Forward(System.Single[0:,0:][])">
            <inheritdoc/>
        </member>
        <member name="M:FaceONNX.EyeBlinkClassifier.GetEyesRectangles(System.Drawing.Point[])">
            <summary>
            Returns left and right eye rectangles from face landmarks.
            </summary>
            <param name="points">Points</param>
            <returns>Left and right eye rectangles</returns>
        </member>
        <member name="M:FaceONNX.EyeBlinkClassifier.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:FaceONNX.FaceDepthClassifier">
            <summary>
            Defines face depth classifier.
            </summary>
        </member>
        <member name="F:FaceONNX.FaceDepthClassifier._session">
            <summary>
            Inference session.
            </summary>
        </member>
        <member name="M:FaceONNX.FaceDepthClassifier.#ctor">
            <summary>
            Initializes face depth classifier.
            </summary>
        </member>
        <member name="M:FaceONNX.FaceDepthClassifier.#ctor(Microsoft.ML.OnnxRuntime.SessionOptions)">
            <summary>
            Initializes face depth classifier.
            </summary>
            <param name="options">Session options</param>
        </member>
        <member name="F:FaceONNX.FaceDepthClassifier.Labels">
            <summary>
            Returns the labels.
            </summary>
        </member>
        <member name="M:FaceONNX.FaceDepthClassifier.Forward(System.Drawing.Bitmap)">
            <inheritdoc/>
        </member>
        <member name="M:FaceONNX.FaceDepthClassifier.Forward(System.Single[0:,0:][])">
            <inheritdoc/>
        </member>
        <member name="M:FaceONNX.FaceDepthClassifier.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:FaceONNX.FaceDetector">
            <summary>
            Defines face detector.
            </summary>
        </member>
        <member name="F:FaceONNX.FaceDetector._session">
            <summary>
            Inference session.
            </summary>
        </member>
        <member name="M:FaceONNX.FaceDetector.#ctor(System.Single,System.Single)">
            <summary>
            Initializes face detector.
            </summary>
            <param name="confidenceThreshold">Confidence threshold</param>
            <param name="nmsThreshold">NonMaxSuppression threshold</param>
        </member>
        <member name="M:FaceONNX.FaceDetector.#ctor(Microsoft.ML.OnnxRuntime.SessionOptions,System.Single,System.Single)">
            <summary>
            Initializes face detector.
            </summary>
            <param name="options">Session options</param>
            <param name="confidenceThreshold">Confidence threshold</param>
            <param name="nmsThreshold">NonMaxSuppression threshold</param>
        </member>
        <member name="P:FaceONNX.FaceDetector.ConfidenceThreshold">
            <inheritdoc/>
        </member>
        <member name="P:FaceONNX.FaceDetector.NmsThreshold">
            <inheritdoc/>
        </member>
        <member name="M:FaceONNX.FaceDetector.Forward(System.Drawing.Bitmap)">
            <inheritdoc/>
        </member>
        <member name="M:FaceONNX.FaceDetector.Forward(System.Single[0:,0:][])">
            <inheritdoc/>
        </member>
        <member name="M:FaceONNX.FaceDetector.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:FaceONNX.FaceEmbedder">
            <summary>
            Defines face embedder.
            </summary>
        </member>
        <member name="F:FaceONNX.FaceEmbedder._session">
            <summary>
            Inference session.
            </summary>
        </member>
        <member name="M:FaceONNX.FaceEmbedder.#ctor">
            <summary>
            Initializes face embedder.
            </summary>
        </member>
        <member name="M:FaceONNX.FaceEmbedder.#ctor(Microsoft.ML.OnnxRuntime.SessionOptions)">
            <summary>
            Initializes face embedder.
            </summary>
            <param name="options">Session options</param>
        </member>
        <member name="P:FaceONNX.FaceEmbedder.EmbeddingSize">
            <summary>
            Returns size of the embedding vector.
            </summary>
        </member>
        <member name="M:FaceONNX.FaceEmbedder.Forward(System.Drawing.Bitmap)">
            <inheritdoc/>
        </member>
        <member name="M:FaceONNX.FaceEmbedder.Forward(System.Single[0:,0:][])">
            <inheritdoc/>
        </member>
        <member name="M:FaceONNX.FaceEmbedder.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:FaceONNX.FaceLandmarksExtractor">
            <summary>
            Defines face landmarks extractor.
            </summary>
        </member>
        <member name="F:FaceONNX.FaceLandmarksExtractor._session">
            <summary>
            Inference session.
            </summary>
        </member>
        <member name="M:FaceONNX.FaceLandmarksExtractor.#ctor">
            <summary>
            Initializes face landmarks extractor.
            </summary>
        </member>
        <member name="M:FaceONNX.FaceLandmarksExtractor.#ctor(Microsoft.ML.OnnxRuntime.SessionOptions)">
            <summary>
            Initializes face landmarks extractor.
            </summary>
            <param name="options">Session options</param>
        </member>
        <member name="M:FaceONNX.FaceLandmarksExtractor.Forward(System.Drawing.Bitmap)">
            <inheritdoc/>
        </member>
        <member name="M:FaceONNX.FaceLandmarksExtractor.Forward(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:FaceONNX.FaceLandmarksExtractor.Forward(System.Single[0:,0:][],System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:FaceONNX.FaceLandmarksExtractor.Forward(System.Single[0:,0:][])">
            <inheritdoc/>
        </member>
        <member name="M:FaceONNX.FaceLandmarksExtractor.Align(System.Drawing.Bitmap,System.Single)">
            <summary>
            Returns aligned face.
            </summary>
            <param name="image">Bitmap</param>
            <param name="angle">Angle</param>
            <returns>Bitmap</returns>
        </member>
        <member name="M:FaceONNX.FaceLandmarksExtractor.Align(System.Drawing.Bitmap,System.Drawing.Rectangle,System.Single)">
            <summary>
            Returns aligned face.
            </summary>
            <param name="image">Bitmap</param>
            <param name="rectangle">Rectangle</param>
            <param name="angle">Angle</param>
            <returns>Bitmap</returns>
        </member>
        <member name="M:FaceONNX.FaceLandmarksExtractor.Align(System.Single[0:,0:][],System.Single)">
            <summary>
            Returns aligned face.
            </summary>
            <param name="image">Image in BGR terms</param>
            <param name="angle">Angle</param>
            <returns>Image in BGR terms</returns>
        </member>
        <member name="M:FaceONNX.FaceLandmarksExtractor.Align(System.Single[0:,0:][],System.Drawing.Rectangle,System.Single)">
            <summary>
            Returns aligned face.
            </summary>
            <param name="image">Image in BGR terms</param>
            <param name="rectangle">Rectangle</param>
            <param name="angle">Angle</param>
            <returns>Image in BGR terms</returns>
        </member>
        <member name="M:FaceONNX.FaceLandmarksExtractor.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:FaceONNX.IFaceClassifier">
            <summary>
            Defines face classifier interface.
            </summary>
        </member>
        <member name="M:FaceONNX.IFaceClassifier.Forward(System.Drawing.Bitmap)">
            <summary>
            Returns face recognition results.
            </summary>
            <param name="image">Bitmap</param>
            <returns>Array</returns>
        </member>
        <member name="M:FaceONNX.IFaceClassifier.Forward(System.Single[0:,0:][])">
            <summary>
            Returns face recognition results.
            </summary>
            <param name="image">Image in BGR terms</param>
            <returns>Array</returns>
        </member>
        <member name="T:FaceONNX.IFaceDetector">
            <summary>
            Defines face detector interface.
            </summary>
        </member>
        <member name="P:FaceONNX.IFaceDetector.ConfidenceThreshold">
            <summary>
            Gets or sets confidence threshold.
            </summary>
        </member>
        <member name="P:FaceONNX.IFaceDetector.NmsThreshold">
            <summary>
            Gets or sets NonMaxSuppression threshold.
            </summary>
        </member>
        <member name="M:FaceONNX.IFaceDetector.Forward(System.Drawing.Bitmap)">
            <summary>
            Returns face detection results.
            </summary>
            <param name="image">Bitmap</param>
            <returns>Rectangles</returns>
        </member>
        <member name="M:FaceONNX.IFaceDetector.Forward(System.Single[0:,0:][])">
            <summary>
            Returns face detection results.
            </summary>
            <param name="image">Image in BGR terms</param>
            <returns>Rectangles</returns>
        </member>
        <member name="T:FaceONNX.IFaceLandmarksExtractor">
            <summary>
            Defines face landmarks extractor interface.
            </summary>
        </member>
        <member name="M:FaceONNX.IFaceLandmarksExtractor.Forward(System.Drawing.Bitmap)">
            <summary>
            Returns face recognition results.
            </summary>
            <param name="image">Bitmap</param>
            <returns>Point</returns>
        </member>
        <member name="M:FaceONNX.IFaceLandmarksExtractor.Forward(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Returns face recognition results.
            </summary>
            <param name="image">Bitmap</param>
            <param name="rectangle">Rectangle</param>
            <returns>Point</returns>
        </member>
        <member name="M:FaceONNX.IFaceLandmarksExtractor.Forward(System.Single[0:,0:][])">
            <summary>
            Returns face recognition results.
            </summary>
            <param name="image">Image in BGR terms</param>
            <returns>Point</returns>
        </member>
        <member name="M:FaceONNX.IFaceLandmarksExtractor.Forward(System.Single[0:,0:][],System.Drawing.Rectangle)">
            <summary>
            Returns face recognition results.
            </summary>
            <param name="image">Image in BGR terms</param>
            <param name="rectangle">Rectangle</param>
            <returns>Point</returns>
        </member>
        <member name="T:FaceONNX.Embeddings">
            <summary>
            Defines the embeddings database.
            </summary>
        </member>
        <member name="M:FaceONNX.Embeddings.#ctor">
            <summary>
            Initializes the embeddings database.
            </summary>
        </member>
        <member name="M:FaceONNX.Embeddings.#ctor(System.Collections.Generic.List{System.Single[]},System.Collections.Generic.List{System.String})">
            <summary>
            Initializes the embeddings database.
            </summary>
            <param name="vectors">Vectors</param>
            <param name="labels">Labels</param>
        </member>
        <member name="M:FaceONNX.Embeddings.Add(System.Single[],System.String)">
            <summary>
            Adds embedding to embeddings database.
            </summary>
            <param name="vector">Vector</param>
            <param name="label">Label</param>
        </member>
        <member name="M:FaceONNX.Embeddings.Remove(System.Int32)">
            <summary>
            Removes embedding from embeddings database.
            </summary>
            <param name="index">Index</param>
        </member>
        <member name="M:FaceONNX.Embeddings.Remove(System.String)">
            <summary>
            Removes embedding from embeddings database.
            </summary>
            <param name="label">Label</param>
        </member>
        <member name="M:FaceONNX.Embeddings.Clear">
            <summary>
            Clears embeddings database.
            </summary>
        </member>
        <member name="P:FaceONNX.Embeddings.Count">
            <summary>
            Returns embeddings database count.
            </summary>
        </member>
        <member name="P:FaceONNX.Embeddings.Vectors">
            <summary>
            Gets or sets vectors.
            </summary>
        </member>
        <member name="P:FaceONNX.Embeddings.Labels">
            <summary>
            Gets or sets labels.
            </summary>
        </member>
        <member name="M:FaceONNX.Embeddings.FromDistance(System.Single[])">
            <summary>
            Score vector from database by Euclidean distance.
            </summary>
            <param name="vector">Vector</param>
            <returns>Label</returns>
        </member>
        <member name="M:FaceONNX.Embeddings.FromSimilarity(System.Single[])">
            <summary>
            Score vector from database by cosine similarity.
            </summary>
            <param name="vector">Vector</param>
            <returns>Label and value</returns>
        </member>
        <member name="T:FaceONNX.Landmarks">
            <summary>
            Using for face points operations.
            </summary>
        </member>
        <member name="M:FaceONNX.Landmarks.Add(System.Drawing.Point[],System.Drawing.Point)">
            <summary>
            Returns processed points.
            </summary>
            <param name="points">Points</param>
            <param name="point">Point</param>
            <returns>Points</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.Sub(System.Drawing.Point[],System.Drawing.Point)">
            <summary>
            Returns processed points.
            </summary>
            <param name="points">Points</param>
            <param name="point">Point</param>
            <returns>Points</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.Rotate(System.Drawing.Point[],System.Drawing.Point,System.Single)">
            <summary>
            Rotates points by angle.
            </summary>
            <param name="points">Points</param>
            <param name="centerPoint">Center point</param>
            <param name="angle">Angle</param>
            <returns>Points</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.Rotate(System.Drawing.Point,System.Drawing.Point,System.Double)">
            <summary>
            Rotates point by angle.
            </summary>
            <param name="pointToRotate">The point to rotate.</param>
            <param name="centerPoint">The center point of rotation.</param>
            <param name="angleInDegrees">The rotation angle in degrees.</param>
            <returns>Rotated point</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.GetRectangle(System.Drawing.Point[])">
            <summary>
            Returns rectangle from points.
            </summary>
            <param name="points">Points</param>
            <returns>Rectangle</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.GetAngle(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Return angle of the three points.
            </summary>
            <param name="left">Left point</param>
            <param name="right">Right point</param>
            <param name="support">Supported point</param>
            <returns>Angle</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.GetSupportedPoint(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Returns supported point.
            </summary>
            <param name="left">Left point</param>
            <param name="right">Right point</param>
            <returns>Point</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.GetMeanPoint(System.Drawing.Point[])">
            <summary>
            Returns mean point.
            </summary>
            <param name="points">Points</param>
            <returns>Point</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.GetRightEye(System.Drawing.Point[])">
            <summary>
            Returns right eye points.
            </summary>
            <param name="points">Points</param>
            <returns>Points</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.GetLeftEye(System.Drawing.Point[])">
            <summary>
            Returns left eye points.
            </summary>
            <param name="points">Points</param>
            <returns>Points</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.GetMouth(System.Drawing.Point[])">
            <summary>
            Returns mouth points.
            </summary>
            <param name="points">Points</param>
            <returns>Points</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.GetFace(System.Drawing.Point[])">
            <summary>
            Returns face points.
            </summary>
            <param name="points">Points</param>
            <returns>Points</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.GetLeftBrow(System.Drawing.Point[])">
            <summary>
            Returns left brow points.
            </summary>
            <param name="points">Points</param>
            <returns>Points</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.GetRightBrow(System.Drawing.Point[])">
            <summary>
            Returns right brow points.
            </summary>
            <param name="points">Points</param>
            <returns>Points</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.GetNose(System.Drawing.Point[])">
            <summary>
            Returns nose points.
            </summary>
            <param name="points">Points</param>
            <returns>Points</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.GetRotationAngle(System.Drawing.Point[])">
            <summary>
            Returns rotation angle from points.
            </summary>
            <param name="points">Points</param>
            <returns>Angle</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.GetSymmetryCoefficient(System.Drawing.Point[])">
            <summary>
            Returns symmetry coefficient of face.
            </summary>
            <param name="points">Points</param>
            <returns>Symmetry coefficient [0, 1]</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.GetSymmetry(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Returns symmetry.
            </summary>
            <param name="a">Center point</param>
            <param name="b">Value</param>
            <param name="c">Value</param>
            <returns>Value</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.GetSymmetry(System.Single,System.Single)">
            <summary>
            Returns symmetry.
            </summary>
            <param name="a">Value</param>
            <param name="b">Value</param>
            <returns>Value</returns>
        </member>
        <member name="M:FaceONNX.Landmarks.Abs(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Returns distance for two points.
            </summary>
            <param name="a">Point</param>
            <param name="b">Point</param>
            <returns>Value</returns>
        </member>
        <member name="T:FaceONNX.Rectangles">
            <summary>
            Using for face boxes operations.
            </summary>
        </member>
        <member name="M:FaceONNX.Rectangles.Add(System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Returns processed rectangle.
            </summary>
            <param name="rectangle">Rectangle</param>
            <param name="point">Point</param>
            <returns>Rectangle</returns>
        </member>
        <member name="M:FaceONNX.Rectangles.Sub(System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Returns processed rectangle.
            </summary>
            <param name="rectangle">Rectangle</param>
            <param name="point">Point</param>
            <returns>Rectangle</returns>
        </member>
        <member name="M:FaceONNX.Rectangles.Add(System.Drawing.Rectangle[],System.Drawing.Point)">
            <summary>
            Returns processed rectangles.
            </summary>
            <param name="rectangles">Rectangles</param>
            <param name="point">Point</param>
            <returns>Rectangles</returns>
        </member>
        <member name="M:FaceONNX.Rectangles.Sub(System.Drawing.Rectangle[],System.Drawing.Point)">
            <summary>
            Returns processed rectangles.
            </summary>
            <param name="rectangles">Rectangles</param>
            <param name="point">Point</param>
            <returns>Rectangles</returns>
        </member>
        <member name="M:FaceONNX.Rectangles.ToPoints(System.Drawing.Rectangle)">
            <summary>
            Returns four points from rectangle.
            </summary>
            <param name="rectangle">Rectangle</param>
            <returns>Points</returns>
        </member>
        <member name="M:FaceONNX.Rectangles.FromPoints(System.Drawing.Point[])">
            <summary>
            Returns rectangle from four points.
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:FaceONNX.Rectangles.GetPoint(System.Drawing.Rectangle)">
            <summary>
            Returns point from rectangle.
            </summary>
            <param name="rectangle">Rectangle</param>
            <returns>Point</returns>
        </member>
        <member name="M:FaceONNX.Rectangles.Area(System.Drawing.Size)">
            <summary>
            Returns size area.
            </summary>
            <param name="size">Size</param>
            <returns>Area</returns>
        </member>
        <member name="M:FaceONNX.Rectangles.Area(System.Drawing.Rectangle)">
            <summary>
            Returns rectangle area.
            </summary>
            <param name="rectangle">Rectangle</param>
            <returns>Area</returns>
        </member>
        <member name="M:FaceONNX.Rectangles.Max(System.Drawing.Rectangle[])">
            <summary>
            Returns the maximum rectangle.
            </summary>
            <param name="rectangles">Rectangles</param>
            <returns>Rectangle</returns>
        </member>
        <member name="M:FaceONNX.Rectangles.Min(System.Drawing.Rectangle[])">
            <summary>
            Returns the minimum rectangle.
            </summary>
            <param name="rectangles">Rectangles</param>
            <returns>Rectangle</returns>
        </member>
        <member name="M:FaceONNX.Rectangles.ToBox(System.Drawing.Rectangle)">
            <summary>
            Returns rectangle scaled to box.
            </summary>
            <param name="rectangle">Rectangle</param>
            <returns>Rectangle</returns>
        </member>
        <member name="M:FaceONNX.Rectangles.ToBox(System.Drawing.Rectangle,System.Single)">
            <summary>
            Returns rectangle scaled to box.
            </summary>
            <param name="rectangle">Rectangle</param>
            <param name="scale">Factor</param>
            <returns>Rectangle</returns>
        </member>
        <member name="M:FaceONNX.Rectangles.ToBox(System.Drawing.Rectangle[])">
            <summary>
            Returns rectangle scaled to box.
            </summary>
            <param name="rectangles">Rectangle</param>
            <returns>Rectangle</returns>
        </member>
        <member name="M:FaceONNX.Rectangles.ToBox(System.Single,System.Drawing.Rectangle[])">
            <summary>
            Returns rectangle scaled to box with image size.
            </summary>
            <param name="rectangles">Rectangles</param>
            <param name="factor">Factor</param>
            <returns>Rectangle</returns>
        </member>
        <member name="M:FaceONNX.Rectangles.IoU(System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Implements IoU operator.
            </summary>
            <param name="a">First rectangle</param>
            <param name="b">Second rectangle</param>
            <returns>Value</returns>
        </member>
        <member name="M:FaceONNX.Rectangles.Scale(System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
            Implements scale operator.
            </summary>
            <param name="rectangle">Rectangle</param>
            <param name="kx">Factor for x axis</param>
            <param name="ky">Factor for y axis</param>
            <returns></returns>
        </member>
        <member name="M:FaceONNX.Rectangles.Scale(System.Drawing.Rectangle)">
            <summary>
            Implements scale operator.
            </summary>
            <param name="rectangle">Rectangle</param>
            <returns>Rectangle</returns>
        </member>
        <member name="T:FaceONNX.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:FaceONNX.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:FaceONNX.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:FaceONNX.Properties.Resources.depth_googlenet_slim">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:FaceONNX.Properties.Resources.eye_blink_cnn">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:FaceONNX.Properties.Resources.face_detector_640">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:FaceONNX.Properties.Resources.landmarks_68_pfld">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:FaceONNX.Properties.Resources.recognition_resnet27">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
    </members>
</doc>
